plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'war'
}

group = 'net.webius'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// WAR added
	providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
}

tasks.named('test') {
	useJUnitPlatform()
}

// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@ 내용 추가 @@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

// WAR Configuration
bootWar {
	archiveBaseName = "Random Food"
	archiveFileName = "Random-Food.war"
	archiveVersion = "1.0.0"
}

// Front-end Deploy
// compileJava -> appCopy -> appBuild -> appInstall
// appInstall => npm install (필요한 데이터 다운로드)
// appBuild => npm run build (APP 빌드, 결과물은 build/ 에 저장)
// appCopy => $webappDir/build 폴더의 내용을 $projectDir/src/main/resources/static 에 붙여넣기
// ※ 여기서 해당 경로에 넣는 이유는 빌드 전에 src 폴더에 붙여넣기 위함
// compileJava => 컴파일 수행
def webappDir = "$projectDir/../app"

compileJava {
	dependsOn "appCopy"
}

task appCopy(type: Copy) {
	dependsOn "appBuild"
	from "${webappDir}/build"
	into "${projectDir}/src/main/resources/static"
}

task appBuild(type: Exec) {
	dependsOn "appInstall"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('window')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task appInstall(type: Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('window')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine "npm.cmd", "install"
	} else {
		commandLine "npm", "audit", "fix"
		commandLine "npm", "install"
	}
}
